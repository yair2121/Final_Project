{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';/*<replacement>*/var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj){keys.push(key);}return keys;};/*</replacement>*/module.exports=Duplex;var Readable=require('./_stream_readable');var Writable=require('./_stream_writable');require('inherits')(Duplex,Readable);{// Allow the keys array to be GC'ed.\nvar keys=objectKeys(Writable.prototype);for(var v=0;v<keys.length;v++){var method=keys[v];if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];}}function Duplex(options){if(!(this instanceof Duplex))return new Duplex(options);Readable.call(this,options);Writable.call(this,options);this.allowHalfOpen=true;if(options){if(options.readable===false)this.readable=false;if(options.writable===false)this.writable=false;if(options.allowHalfOpen===false){this.allowHalfOpen=false;this.once('end',onend);}}}Object.defineProperty(Duplex.prototype,'writableHighWaterMark',{// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,get:function get(){return this._writableState.highWaterMark;}});Object.defineProperty(Duplex.prototype,'writableBuffer',{// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer();}});Object.defineProperty(Duplex.prototype,'writableLength',{// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,get:function get(){return this._writableState.length;}});// the no-half-open enforcer\nfunction onend(){// If the writable side ended, then we're ok.\nif(this._writableState.ended)return;// no more data can be written.\n// But allow more writes to happen in this tick.\nprocess.nextTick(onEndNT,this);}function onEndNT(self){self.end();}Object.defineProperty(Duplex.prototype,'destroyed',{// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false;}return this._readableState.destroyed&&this._writableState.destroyed;},set:function set(value){// we ignore the value if the stream\n// has not been initialized yet\nif(this._readableState===undefined||this._writableState===undefined){return;}// backward compatibility, the user is explicitly\n// managing destroyed\nthis._readableState.destroyed=value;this._writableState.destroyed=value;}});","map":{"version":3,"names":["objectKeys","Object","keys","obj","key","push","module","exports","Duplex","Readable","require","Writable","prototype","v","length","method","options","call","allowHalfOpen","readable","writable","once","onend","defineProperty","enumerable","get","_writableState","highWaterMark","getBuffer","ended","process","nextTick","onEndNT","self","end","_readableState","undefined","destroyed","set","value"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}