{"ast":null,"code":"'use strict';var utils=require('../utils');var common=require('../common');var shaCommon=require('./common');var rotl32=utils.rotl32;var sum32=utils.sum32;var sum32_5=utils.sum32_5;var ft_1=shaCommon.ft_1;var BlockHash=common.BlockHash;var sha1_K=[0x5A827999,0x6ED9EBA1,0x8F1BBCDC,0xCA62C1D6];function SHA1(){if(!(this instanceof SHA1))return new SHA1();BlockHash.call(this);this.h=[0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0];this.W=new Array(80);}utils.inherits(SHA1,BlockHash);module.exports=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(msg,start){var W=this.W;for(var i=0;i<16;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=rotl32(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);var a=this.h[0];var b=this.h[1];var c=this.h[2];var d=this.h[3];var e=this.h[4];for(i=0;i<W.length;i++){var s=~~(i/20);var t=sum32_5(rotl32(a,5),ft_1(s,b,c,d),e,W[i],sha1_K[s]);e=d;d=c;c=rotl32(b,30);b=a;a=t;}this.h[0]=sum32(this.h[0],a);this.h[1]=sum32(this.h[1],b);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e);};SHA1.prototype._digest=function digest(enc){if(enc==='hex')return utils.toHex32(this.h,'big');else return utils.split32(this.h,'big');};","map":{"version":3,"names":["utils","require","common","shaCommon","rotl32","sum32","sum32_5","ft_1","BlockHash","sha1_K","SHA1","call","h","W","Array","inherits","module","exports","blockSize","outSize","hmacStrength","padLength","prototype","_update","msg","start","i","length","a","b","c","d","e","s","t","_digest","digest","enc","toHex32","split32"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/hash.js/lib/hash/sha/1.js"],"sourcesContent":["'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}