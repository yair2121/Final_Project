{"ast":null,"code":"var MODES=require('./modes');var AuthCipher=require('./authCipher');var Buffer=require('safe-buffer').Buffer;var StreamCipher=require('./streamCipher');var Transform=require('cipher-base');var aes=require('./aes');var ebtk=require('evp_bytestokey');var inherits=require('inherits');function Cipher(mode,key,iv){Transform.call(this);this._cache=new Splitter();this._cipher=new aes.AES(key);this._prev=Buffer.from(iv);this._mode=mode;this._autopadding=true;}inherits(Cipher,Transform);Cipher.prototype._update=function(data){this._cache.add(data);var chunk;var thing;var out=[];while(chunk=this._cache.get()){thing=this._mode.encrypt(this,chunk);out.push(thing);}return Buffer.concat(out);};var PADDING=Buffer.alloc(16,0x10);Cipher.prototype._final=function(){var chunk=this._cache.flush();if(this._autopadding){chunk=this._mode.encrypt(this,chunk);this._cipher.scrub();return chunk;}if(!chunk.equals(PADDING)){this._cipher.scrub();throw new Error('data not multiple of block length');}};Cipher.prototype.setAutoPadding=function(setTo){this._autopadding=!!setTo;return this;};function Splitter(){this.cache=Buffer.allocUnsafe(0);}Splitter.prototype.add=function(data){this.cache=Buffer.concat([this.cache,data]);};Splitter.prototype.get=function(){if(this.cache.length>15){var out=this.cache.slice(0,16);this.cache=this.cache.slice(16);return out;}return null;};Splitter.prototype.flush=function(){var len=16-this.cache.length;var padBuff=Buffer.allocUnsafe(len);var i=-1;while(++i<len){padBuff.writeUInt8(len,i);}return Buffer.concat([this.cache,padBuff]);};function createCipheriv(suite,password,iv){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');if(typeof password==='string')password=Buffer.from(password);if(password.length!==config.key/8)throw new TypeError('invalid key length '+password.length);if(typeof iv==='string')iv=Buffer.from(iv);if(config.mode!=='GCM'&&iv.length!==config.iv)throw new TypeError('invalid iv length '+iv.length);if(config.type==='stream'){return new StreamCipher(config.module,password,iv);}else if(config.type==='auth'){return new AuthCipher(config.module,password,iv);}return new Cipher(config.module,password,iv);}function createCipher(suite,password){var config=MODES[suite.toLowerCase()];if(!config)throw new TypeError('invalid suite type');var keys=ebtk(password,false,config.key,config.iv);return createCipheriv(suite,keys.key,keys.iv);}exports.createCipheriv=createCipheriv;exports.createCipher=createCipher;","map":{"version":3,"names":["MODES","require","AuthCipher","Buffer","StreamCipher","Transform","aes","ebtk","inherits","Cipher","mode","key","iv","call","_cache","Splitter","_cipher","AES","_prev","from","_mode","_autopadding","prototype","_update","data","add","chunk","thing","out","get","encrypt","push","concat","PADDING","alloc","_final","flush","scrub","equals","Error","setAutoPadding","setTo","cache","allocUnsafe","length","slice","len","padBuff","i","writeUInt8","createCipheriv","suite","password","config","toLowerCase","TypeError","type","module","createCipher","keys","exports"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/browserify-aes/encrypter.js"],"sourcesContent":["var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}