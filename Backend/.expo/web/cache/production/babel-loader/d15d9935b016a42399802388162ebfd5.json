{"ast":null,"code":"// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer=require('safe-buffer').Buffer;var BN=require('bn.js');var EC=require('elliptic').ec;var parseKeys=require('parse-asn1');var curves=require('./curves.json');function verify(sig,hash,key,signType,tag){var pub=parseKeys(key);if(pub.type==='ec'){// rsa keys can be interpreted as ecdsa ones in openssl\nif(signType!=='ecdsa'&&signType!=='ecdsa/rsa')throw new Error('wrong public key type');return ecVerify(sig,hash,pub);}else if(pub.type==='dsa'){if(signType!=='dsa')throw new Error('wrong public key type');return dsaVerify(sig,hash,pub);}else{if(signType!=='rsa'&&signType!=='ecdsa/rsa')throw new Error('wrong public key type');}hash=Buffer.concat([tag,hash]);var len=pub.modulus.byteLength();var pad=[1];var padNum=0;while(hash.length+pad.length+2<len){pad.push(0xff);padNum++;}pad.push(0x00);var i=-1;while(++i<hash.length){pad.push(hash[i]);}pad=Buffer.from(pad);var red=BN.mont(pub.modulus);sig=new BN(sig).toRed(red);sig=sig.redPow(new BN(pub.publicExponent));sig=Buffer.from(sig.fromRed().toArray());var out=padNum<8?1:0;len=Math.min(sig.length,pad.length);if(sig.length!==pad.length)out=1;i=-1;while(++i<len)out|=sig[i]^pad[i];return out===0;}function ecVerify(sig,hash,pub){var curveId=curves[pub.data.algorithm.curve.join('.')];if(!curveId)throw new Error('unknown curve '+pub.data.algorithm.curve.join('.'));var curve=new EC(curveId);var pubkey=pub.data.subjectPrivateKey.data;return curve.verify(hash,sig,pubkey);}function dsaVerify(sig,hash,pub){var p=pub.data.p;var q=pub.data.q;var g=pub.data.g;var y=pub.data.pub_key;var unpacked=parseKeys.signature.decode(sig,'der');var s=unpacked.s;var r=unpacked.r;checkValue(s,q);checkValue(r,q);var montp=BN.mont(p);var w=s.invm(q);var v=g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);return v.cmp(r)===0;}function checkValue(b,q){if(b.cmpn(0)<=0)throw new Error('invalid sig');if(b.cmp(q)>=q)throw new Error('invalid sig');}module.exports=verify;","map":{"version":3,"names":["Buffer","require","BN","EC","ec","parseKeys","curves","verify","sig","hash","key","signType","tag","pub","type","Error","ecVerify","dsaVerify","concat","len","modulus","byteLength","pad","padNum","length","push","i","from","red","mont","toRed","redPow","publicExponent","fromRed","toArray","out","Math","min","curveId","data","algorithm","curve","join","pubkey","subjectPrivateKey","p","q","g","y","pub_key","unpacked","signature","decode","s","r","checkValue","montp","w","invm","v","mul","mod","cmp","b","cmpn","module","exports"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/browserify-sign/browser/verify.js"],"sourcesContent":["// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [1]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = Buffer.from(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = Buffer.from(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}