{"ast":null,"code":"'use strict';var Buffer=require('safe-buffer').Buffer;var Transform=require('readable-stream').Transform;var inherits=require('inherits');function throwIfNotStringOrBuffer(val,prefix){if(!Buffer.isBuffer(val)&&typeof val!=='string'){throw new TypeError(prefix+' must be a string or a buffer');}}function HashBase(blockSize){Transform.call(this);this._block=Buffer.allocUnsafe(blockSize);this._blockSize=blockSize;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false;}inherits(HashBase,Transform);HashBase.prototype._transform=function(chunk,encoding,callback){var error=null;try{this.update(chunk,encoding);}catch(err){error=err;}callback(error);};HashBase.prototype._flush=function(callback){var error=null;try{this.push(this.digest());}catch(err){error=err;}callback(error);};HashBase.prototype.update=function(data,encoding){throwIfNotStringOrBuffer(data,'Data');if(this._finalized)throw new Error('Digest already called');if(!Buffer.isBuffer(data))data=Buffer.from(data,encoding);// consume data\nvar block=this._block;var offset=0;while(this._blockOffset+data.length-offset>=this._blockSize){for(var i=this._blockOffset;i<this._blockSize;)block[i++]=data[offset++];this._update();this._blockOffset=0;}while(offset<data.length)block[this._blockOffset++]=data[offset++];// update length\nfor(var j=0,carry=data.length*8;carry>0;++j){this._length[j]+=carry;carry=this._length[j]/0x0100000000|0;if(carry>0)this._length[j]-=0x0100000000*carry;}return this;};HashBase.prototype._update=function(){throw new Error('_update is not implemented');};HashBase.prototype.digest=function(encoding){if(this._finalized)throw new Error('Digest already called');this._finalized=true;var digest=this._digest();if(encoding!==undefined)digest=digest.toString(encoding);// reset state\nthis._block.fill(0);this._blockOffset=0;for(var i=0;i<4;++i)this._length[i]=0;return digest;};HashBase.prototype._digest=function(){throw new Error('_digest is not implemented');};module.exports=HashBase;","map":{"version":3,"names":["Buffer","require","Transform","inherits","throwIfNotStringOrBuffer","val","prefix","isBuffer","TypeError","HashBase","blockSize","call","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","prototype","_transform","chunk","encoding","callback","error","update","err","_flush","push","digest","data","Error","from","block","offset","length","i","_update","j","carry","_digest","undefined","toString","fill","module","exports"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/hash-base/index.js"],"sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}