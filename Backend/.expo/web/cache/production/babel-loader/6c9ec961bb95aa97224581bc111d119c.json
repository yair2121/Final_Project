{"ast":null,"code":"const express=require(\"express\");const app=express();const http=require(\"http\");const server=http.createServer(app);const{Server}=require(\"socket.io\");const io=new Server(server,{cors:{origin:\"*\",methods:\"GET,HEAD,PUT,PATCH,POST,DELETE\",preflightContinue:false,optionsSuccessStatus:204}});const{SessionsController}=require(\"./sessions/SessionsController\");var path=require(\"path\");// Path to web build files\npublic_path=path.dirname(__dirname)+\"/Frontend/Gui/web-build\";const session_controller=new SessionsController();port=3000;// List of sessions which have started and have not yet updated last player\n// (Session starts before player is added to room)\nincomplete_sessions={};// This enables client to fetch anything in public folder\napp.use(express.static(public_path));function connect_player(player_id,player_name,game_name){return session_controller.connect_player(player_id,player_name,game_name);}session_controller.on(\"Session started\",(game_state,s_id)=>{incomplete_sessions[s_id]=game_state;//console.log(\"initialised incomplete session\");\nio.to(s_id).emit(\"Session started\",game_state,s_id);});session_controller.on(\"Update session state\",(game_state,s_id)=>{io.to(s_id).emit(\"Update state\",game_state,s_id);});session_controller.on(\"Update session move\",(move,s_id)=>{//console.log(\"indexjs update session move\");\n//console.log(move);\nio.to(s_id).emit(\"Update move\",move,s_id);});session_controller.on(\"Session ended\",s_id=>{io.to(s_id).emit(\"Session ended\",s_id);io.sockets.clients(s_id).forEach(function(s){s.leave(s_id);});});app.get(\"/\",(req,res)=>{res.sendFile(public_path+\"/index.html\");});// app.get(\"/play\", (req, res) => {\n//   res.sendFile(public_path + \"/mock_secondary.html\");\n// });\nio.on(\"connection\",socket=>{console.log(\"connect\");// Connects a player to a game and uses callback function to respond with the session id and game state.\nsocket.on(\"connect_to_game\",(game_name,callback)=>{let s_id=connect_player(socket.id,socket.data.name,game_name);socket.join(s_id);if(s_id in incomplete_sessions){console.log(\"started send new client\");callback({s_id:s_id,game_state:incomplete_sessions[s_id]});delete incomplete_sessions[s_id];}else{callback({s_id:s_id,game_state:{}});}socket.on(\"update_move\",(game_name,s_id,move)=>{session_controller.make_move(game_name,s_id,move);});});socket.once(\"login\",(username,callback)=>{socket.data.name=username;callback(socket.id);});socket.on(\"connect_as_api\",password=>{//TODO: replace log with authentication\nconsole.log(password);socket.on(\"connect_to_session\",(player_id,player_name,session_id,callback)=>{let s_id=session_controller.connect_to_session(player_id,player_name,session_id);callback(s_id);});socket.on(\"update_move\",(game_name,s_id,move)=>{session_controller.make_move(game_name,s_id,move);});});socket.on(\"echo\",body=>console.log(body));socket.once(\"disconnect\",()=>{// console.log(\"user disconnected\");\n});});server.listen(port,()=>{});","map":{"version":3,"names":["express","require","app","http","server","createServer","Server","io","cors","origin","methods","preflightContinue","optionsSuccessStatus","SessionsController","path","public_path","dirname","__dirname","session_controller","port","incomplete_sessions","use","static","connect_player","player_id","player_name","game_name","on","game_state","s_id","to","emit","move","sockets","clients","forEach","s","leave","get","req","res","sendFile","socket","console","log","callback","id","data","name","join","make_move","once","username","password","session_id","connect_to_session","body","listen"],"sources":["/Users/yair/Desktop/university/Final_Project/Backend/index.js"],"sourcesContent":["const express = require(\"express\");\n\nconst app = express();\n\nconst http = require(\"http\");\nconst server = http.createServer(app);\nconst { Server } = require(\"socket.io\");\nconst io = new Server(server, {\n  cors: {\n    origin: \"*\",\n    methods: \"GET,HEAD,PUT,PATCH,POST,DELETE\",\n    preflightContinue: false,\n    optionsSuccessStatus: 204,\n  },\n});\nconst { SessionsController } = require(\"./sessions/SessionsController\");\nvar path = require(\"path\");\n// Path to web build files\npublic_path = path.dirname(__dirname) + \"/Frontend/Gui/web-build\";\nconst session_controller = new SessionsController();\nport = 3000;\n// List of sessions which have started and have not yet updated last player\n// (Session starts before player is added to room)\nincomplete_sessions = {};\n\n// This enables client to fetch anything in public folder\napp.use(express.static(public_path));\n\nfunction connect_player(player_id, player_name, game_name) {\n  return session_controller.connect_player(player_id, player_name, game_name);\n}\n\nsession_controller.on(\"Session started\", (game_state, s_id) => {\n  incomplete_sessions[s_id] = game_state;\n  //console.log(\"initialised incomplete session\");\n  io.to(s_id).emit(\"Session started\", game_state, s_id);\n});\n\nsession_controller.on(\"Update session state\", (game_state, s_id) => {\n  io.to(s_id).emit(\"Update state\", game_state, s_id);\n});\n\nsession_controller.on(\"Update session move\", (move, s_id) => {\n  //console.log(\"indexjs update session move\");\n  //console.log(move);\n  io.to(s_id).emit(\"Update move\", move, s_id);\n});\n\nsession_controller.on(\"Session ended\", (s_id) => {\n  io.to(s_id).emit(\"Session ended\", s_id);\n  io.sockets.clients(s_id).forEach(function (s) {\n    s.leave(s_id);\n  });\n});\n\napp.get(\"/\", (req, res) => {\n  res.sendFile(public_path + \"/index.html\");\n});\n\n// app.get(\"/play\", (req, res) => {\n//   res.sendFile(public_path + \"/mock_secondary.html\");\n// });\n\nio.on(\"connection\", (socket) => {\n  console.log(\"connect\");\n  // Connects a player to a game and uses callback function to respond with the session id and game state.\n  socket.on(\"connect_to_game\", (game_name, callback) => {\n    let s_id = connect_player(socket.id, socket.data.name, game_name);\n    socket.join(s_id);\n    if (s_id in incomplete_sessions) {\n      console.log(\"started send new client\");\n      callback({ s_id: s_id, game_state: incomplete_sessions[s_id] });\n      delete incomplete_sessions[s_id];\n    } else {\n      callback({ s_id: s_id, game_state: {} });\n    }\n\n    socket.on(\"update_move\", (game_name, s_id, move) => {\n      session_controller.make_move(game_name, s_id, move);\n    });\n  });\n\n  socket.once(\"login\", (username, callback) => {\n    socket.data.name = username;\n    callback(socket.id);\n  });\n\n  socket.on(\"connect_as_api\", (password) => {\n    //TODO: replace log with authentication\n    console.log(password);\n    socket.on(\n      \"connect_to_session\",\n      (player_id, player_name, session_id, callback) => {\n        let s_id = session_controller.connect_to_session(\n          player_id,\n          player_name,\n          session_id\n        );\n        callback(s_id);\n      }\n    );\n    socket.on(\"update_move\", (game_name, s_id, move) => {\n      session_controller.make_move(game_name, s_id, move);\n    });\n  });\n\n  socket.on(\"echo\", (body) => console.log(body));\n  socket.once(\"disconnect\", () => {\n    // console.log(\"user disconnected\");\n  });\n});\n\nserver.listen(port, () => {});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}