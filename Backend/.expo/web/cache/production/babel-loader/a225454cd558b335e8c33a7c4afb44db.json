{"ast":null,"code":"'use strict';var BN=require('bn.js');var utils=require('../utils');var assert=utils.assert;function KeyPair(ec,options){this.ec=ec;this.priv=null;this.pub=null;// KeyPair(ec, { priv: ..., pub: ... })\nif(options.priv)this._importPrivate(options.priv,options.privEnc);if(options.pub)this._importPublic(options.pub,options.pubEnc);}module.exports=KeyPair;KeyPair.fromPublic=function fromPublic(ec,pub,enc){if(pub instanceof KeyPair)return pub;return new KeyPair(ec,{pub:pub,pubEnc:enc});};KeyPair.fromPrivate=function fromPrivate(ec,priv,enc){if(priv instanceof KeyPair)return priv;return new KeyPair(ec,{priv:priv,privEnc:enc});};KeyPair.prototype.validate=function validate(){var pub=this.getPublic();if(pub.isInfinity())return{result:false,reason:'Invalid public key'};if(!pub.validate())return{result:false,reason:'Public key is not a point'};if(!pub.mul(this.ec.curve.n).isInfinity())return{result:false,reason:'Public key * N != O'};return{result:true,reason:null};};KeyPair.prototype.getPublic=function getPublic(compact,enc){// compact is optional argument\nif(typeof compact==='string'){enc=compact;compact=null;}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!enc)return this.pub;return this.pub.encode(enc,compact);};KeyPair.prototype.getPrivate=function getPrivate(enc){if(enc==='hex')return this.priv.toString(16,2);else return this.priv;};KeyPair.prototype._importPrivate=function _importPrivate(key,enc){this.priv=new BN(key,enc||16);// Ensure that the priv won't be bigger than n, otherwise we may fail\n// in fixed multiplication method\nthis.priv=this.priv.umod(this.ec.curve.n);};KeyPair.prototype._importPublic=function _importPublic(key,enc){if(key.x||key.y){// Montgomery points only have an `x` coordinate.\n// Weierstrass/Edwards points on the other hand have both `x` and\n// `y` coordinates.\nif(this.ec.curve.type==='mont'){assert(key.x,'Need x coordinate');}else if(this.ec.curve.type==='short'||this.ec.curve.type==='edwards'){assert(key.x&&key.y,'Need both x and y coordinate');}this.pub=this.ec.curve.point(key.x,key.y);return;}this.pub=this.ec.curve.decodePoint(key,enc);};// ECDH\nKeyPair.prototype.derive=function derive(pub){if(!pub.validate()){assert(pub.validate(),'public point not validated');}return pub.mul(this.priv).getX();};// ECDSA\nKeyPair.prototype.sign=function sign(msg,enc,options){return this.ec.sign(msg,this,enc,options);};KeyPair.prototype.verify=function verify(msg,signature){return this.ec.verify(msg,signature,this);};KeyPair.prototype.inspect=function inspect(){return'<Key priv: '+(this.priv&&this.priv.toString(16,2))+' pub: '+(this.pub&&this.pub.inspect())+' >';};","map":{"version":3,"names":["BN","require","utils","assert","KeyPair","ec","options","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","module","exports","fromPublic","enc","fromPrivate","prototype","validate","getPublic","isInfinity","result","reason","mul","curve","n","compact","g","encode","getPrivate","toString","key","umod","x","y","type","point","decodePoint","derive","getX","sign","msg","verify","signature","inspect"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/elliptic/lib/elliptic/ec/key.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}