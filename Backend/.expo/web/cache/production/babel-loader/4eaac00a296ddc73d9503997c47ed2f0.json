{"ast":null,"code":"'use strict';// undocumented cb() API, needed for core, not for public API\nfunction destroy(err,cb){var _this=this;var readableDestroyed=this._readableState&&this._readableState.destroyed;var writableDestroyed=this._writableState&&this._writableState.destroyed;if(readableDestroyed||writableDestroyed){if(cb){cb(err);}else if(err){if(!this._writableState){process.nextTick(emitErrorNT,this,err);}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,err);}}return this;}// we set destroyed to true before firing error callbacks in order\n// to make it re-entrance safe in case destroy() is called within callbacks\nif(this._readableState){this._readableState.destroyed=true;}// if this is a duplex stream mark the writable part as destroyed as well\nif(this._writableState){this._writableState.destroyed=true;}this._destroy(err||null,function(err){if(!cb&&err){if(!_this._writableState){process.nextTick(emitErrorAndCloseNT,_this,err);}else if(!_this._writableState.errorEmitted){_this._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,_this,err);}else{process.nextTick(emitCloseNT,_this);}}else if(cb){process.nextTick(emitCloseNT,_this);cb(err);}else{process.nextTick(emitCloseNT,_this);}});return this;}function emitErrorAndCloseNT(self,err){emitErrorNT(self,err);emitCloseNT(self);}function emitCloseNT(self){if(self._writableState&&!self._writableState.emitClose)return;if(self._readableState&&!self._readableState.emitClose)return;self.emit('close');}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false;}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false;}}function emitErrorNT(self,err){self.emit('error',err);}function errorOrDestroy(stream,err){// We have tests that rely on errors being emitted\n// in the same tick, so changing this is semver major.\n// For now when you opt-in to autoDestroy we allow\n// the error to be emitted nextTick. In a future\n// semver major update we should change the default to this.\nvar rState=stream._readableState;var wState=stream._writableState;if(rState&&rState.autoDestroy||wState&&wState.autoDestroy)stream.destroy(err);else stream.emit('error',err);}module.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy};","map":{"version":3,"names":["destroy","err","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","process","nextTick","emitErrorNT","errorEmitted","_destroy","emitErrorAndCloseNT","emitCloseNT","self","emitClose","emit","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy","module","exports"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js"],"sourcesContent":["'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}