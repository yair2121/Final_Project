{"ast":null,"code":"var xor=require('buffer-xor');function getBlock(self){self._prev=self._cipher.encryptBlock(self._prev);return self._prev;}exports.encrypt=function(self,chunk){while(self._cache.length<chunk.length){self._cache=Buffer.concat([self._cache,getBlock(self)]);}var pad=self._cache.slice(0,chunk.length);self._cache=self._cache.slice(chunk.length);return xor(chunk,pad);};","map":{"version":3,"names":["xor","require","getBlock","self","_prev","_cipher","encryptBlock","exports","encrypt","chunk","_cache","length","Buffer","concat","pad","slice"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/browserify-aes/modes/ofb.js"],"sourcesContent":["var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n"],"mappings":"AAAA,GAAIA,IAAG,CAAGC,OAAO,CAAC,YAAD,CAAjB,CAEA,QAASC,SAAT,CAAmBC,IAAnB,CAAyB,CACvBA,IAAI,CAACC,KAAL,CAAaD,IAAI,CAACE,OAAL,CAAaC,YAAb,CAA0BH,IAAI,CAACC,KAA/B,CAAb,CACA,MAAOD,KAAI,CAACC,KAAZ,CACD,CAEDG,OAAO,CAACC,OAAR,CAAkB,SAAUL,IAAV,CAAgBM,KAAhB,CAAuB,CACvC,MAAON,IAAI,CAACO,MAAL,CAAYC,MAAZ,CAAqBF,KAAK,CAACE,MAAlC,CAA0C,CACxCR,IAAI,CAACO,MAAL,CAAcE,MAAM,CAACC,MAAP,CAAc,CAACV,IAAI,CAACO,MAAN,CAAcR,QAAQ,CAACC,IAAD,CAAtB,CAAd,CAAd,CACD,CAED,GAAIW,IAAG,CAAGX,IAAI,CAACO,MAAL,CAAYK,KAAZ,CAAkB,CAAlB,CAAqBN,KAAK,CAACE,MAA3B,CAAV,CACAR,IAAI,CAACO,MAAL,CAAcP,IAAI,CAACO,MAAL,CAAYK,KAAZ,CAAkBN,KAAK,CAACE,MAAxB,CAAd,CACA,MAAOX,IAAG,CAACS,KAAD,CAAQK,GAAR,CAAV,CACD,CARD"},"metadata":{},"sourceType":"script"}