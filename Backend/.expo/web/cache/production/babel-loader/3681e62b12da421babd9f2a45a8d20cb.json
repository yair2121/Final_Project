{"ast":null,"code":"var generatePrime=require('./lib/generatePrime');var primes=require('./lib/primes.json');var DH=require('./lib/dh');function getDiffieHellman(mod){var prime=new Buffer(primes[mod].prime,'hex');var gen=new Buffer(primes[mod].gen,'hex');return new DH(prime,gen);}var ENCODINGS={'binary':true,'hex':true,'base64':true};function createDiffieHellman(prime,enc,generator,genc){if(Buffer.isBuffer(enc)||ENCODINGS[enc]===undefined){return createDiffieHellman(prime,'binary',enc,generator);}enc=enc||'binary';genc=genc||'binary';generator=generator||new Buffer([2]);if(!Buffer.isBuffer(generator)){generator=new Buffer(generator,genc);}if(typeof prime==='number'){return new DH(generatePrime(prime,generator),generator,true);}if(!Buffer.isBuffer(prime)){prime=new Buffer(prime,enc);}return new DH(prime,generator,true);}exports.DiffieHellmanGroup=exports.createDiffieHellmanGroup=exports.getDiffieHellman=getDiffieHellman;exports.createDiffieHellman=exports.DiffieHellman=createDiffieHellman;","map":{"version":3,"names":["generatePrime","require","primes","DH","getDiffieHellman","mod","prime","Buffer","gen","ENCODINGS","createDiffieHellman","enc","generator","genc","isBuffer","undefined","exports","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/diffie-hellman/browser.js"],"sourcesContent":["var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n"],"mappings":"AAAA,GAAIA,cAAa,CAAGC,OAAO,CAAC,qBAAD,CAA3B,CACA,GAAIC,OAAM,CAAGD,OAAO,CAAC,mBAAD,CAApB,CAEA,GAAIE,GAAE,CAAGF,OAAO,CAAC,UAAD,CAAhB,CAEA,QAASG,iBAAT,CAA2BC,GAA3B,CAAgC,CAC9B,GAAIC,MAAK,CAAG,GAAIC,OAAJ,CAAWL,MAAM,CAACG,GAAD,CAAN,CAAYC,KAAvB,CAA8B,KAA9B,CAAZ,CACA,GAAIE,IAAG,CAAG,GAAID,OAAJ,CAAWL,MAAM,CAACG,GAAD,CAAN,CAAYG,GAAvB,CAA4B,KAA5B,CAAV,CAEA,MAAO,IAAIL,GAAJ,CAAOG,KAAP,CAAcE,GAAd,CAAP,CACD,CAED,GAAIC,UAAS,CAAG,CACd,SAAU,IADI,CACE,MAAO,IADT,CACe,SAAU,IADzB,CAAhB,CAIA,QAASC,oBAAT,CAA8BJ,KAA9B,CAAqCK,GAArC,CAA0CC,SAA1C,CAAqDC,IAArD,CAA2D,CACzD,GAAIN,MAAM,CAACO,QAAP,CAAgBH,GAAhB,GAAwBF,SAAS,CAACE,GAAD,CAAT,GAAmBI,SAA/C,CAA0D,CACxD,MAAOL,oBAAmB,CAACJ,KAAD,CAAQ,QAAR,CAAkBK,GAAlB,CAAuBC,SAAvB,CAA1B,CACD,CAEDD,GAAG,CAAGA,GAAG,EAAI,QAAb,CACAE,IAAI,CAAGA,IAAI,EAAI,QAAf,CACAD,SAAS,CAAGA,SAAS,EAAI,GAAIL,OAAJ,CAAW,CAAC,CAAD,CAAX,CAAzB,CAEA,GAAI,CAACA,MAAM,CAACO,QAAP,CAAgBF,SAAhB,CAAL,CAAiC,CAC/BA,SAAS,CAAG,GAAIL,OAAJ,CAAWK,SAAX,CAAsBC,IAAtB,CAAZ,CACD,CAED,GAAI,MAAOP,MAAP,GAAiB,QAArB,CAA+B,CAC7B,MAAO,IAAIH,GAAJ,CAAOH,aAAa,CAACM,KAAD,CAAQM,SAAR,CAApB,CAAwCA,SAAxC,CAAmD,IAAnD,CAAP,CACD,CAED,GAAI,CAACL,MAAM,CAACO,QAAP,CAAgBR,KAAhB,CAAL,CAA6B,CAC3BA,KAAK,CAAG,GAAIC,OAAJ,CAAWD,KAAX,CAAkBK,GAAlB,CAAR,CACD,CAED,MAAO,IAAIR,GAAJ,CAAOG,KAAP,CAAcM,SAAd,CAAyB,IAAzB,CAAP,CACD,CAEDI,OAAO,CAACC,kBAAR,CAA6BD,OAAO,CAACE,wBAAR,CAAmCF,OAAO,CAACZ,gBAAR,CAA2BA,gBAA3F,CACAY,OAAO,CAACN,mBAAR,CAA8BM,OAAO,CAACG,aAAR,CAAwBT,mBAAtD"},"metadata":{},"sourceType":"script"}