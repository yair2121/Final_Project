{"ast":null,"code":"'use strict';var utils=require('./utils');var assert=require('minimalistic-assert');function Hmac(hash,key,enc){if(!(this instanceof Hmac))return new Hmac(hash,key,enc);this.Hash=hash;this.blockSize=hash.blockSize/8;this.outSize=hash.outSize/8;this.inner=null;this.outer=null;this._init(utils.toArray(key,enc));}module.exports=Hmac;Hmac.prototype._init=function init(key){// Shorten key, if needed\nif(key.length>this.blockSize)key=new this.Hash().update(key).digest();assert(key.length<=this.blockSize);// Add padding to key\nfor(var i=key.length;i<this.blockSize;i++)key.push(0);for(i=0;i<key.length;i++)key[i]^=0x36;this.inner=new this.Hash().update(key);// 0x36 ^ 0x5c = 0x6a\nfor(i=0;i<key.length;i++)key[i]^=0x6a;this.outer=new this.Hash().update(key);};Hmac.prototype.update=function update(msg,enc){this.inner.update(msg,enc);return this;};Hmac.prototype.digest=function digest(enc){this.outer.update(this.inner.digest());return this.outer.digest(enc);};","map":{"version":3,"names":["utils","require","assert","Hmac","hash","key","enc","Hash","blockSize","outSize","inner","outer","_init","toArray","module","exports","prototype","init","length","update","digest","i","push","msg"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/hash.js/lib/hash/hmac.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n"],"mappings":"AAAA,aAEA,GAAIA,MAAK,CAAGC,OAAO,CAAC,SAAD,CAAnB,CACA,GAAIC,OAAM,CAAGD,OAAO,CAAC,qBAAD,CAApB,CAEA,QAASE,KAAT,CAAcC,IAAd,CAAoBC,GAApB,CAAyBC,GAAzB,CAA8B,CAC5B,GAAI,EAAE,eAAgBH,KAAlB,CAAJ,CACE,MAAO,IAAIA,KAAJ,CAASC,IAAT,CAAeC,GAAf,CAAoBC,GAApB,CAAP,CACF,KAAKC,IAAL,CAAYH,IAAZ,CACA,KAAKI,SAAL,CAAiBJ,IAAI,CAACI,SAAL,CAAiB,CAAlC,CACA,KAAKC,OAAL,CAAeL,IAAI,CAACK,OAAL,CAAe,CAA9B,CACA,KAAKC,KAAL,CAAa,IAAb,CACA,KAAKC,KAAL,CAAa,IAAb,CAEA,KAAKC,KAAL,CAAWZ,KAAK,CAACa,OAAN,CAAcR,GAAd,CAAmBC,GAAnB,CAAX,EACD,CACDQ,MAAM,CAACC,OAAP,CAAiBZ,IAAjB,CAEAA,IAAI,CAACa,SAAL,CAAeJ,KAAf,CAAuB,QAASK,KAAT,CAAcZ,GAAd,CAAmB,CACxC;AACA,GAAIA,GAAG,CAACa,MAAJ,CAAa,KAAKV,SAAtB,CACEH,GAAG,CAAG,GAAI,MAAKE,IAAT,GAAgBY,MAAhB,CAAuBd,GAAvB,EAA4Be,MAA5B,EAAN,CACFlB,MAAM,CAACG,GAAG,CAACa,MAAJ,EAAc,KAAKV,SAApB,CAAN,CAEA;AACA,IAAK,GAAIa,EAAC,CAAGhB,GAAG,CAACa,MAAjB,CAAyBG,CAAC,CAAG,KAAKb,SAAlC,CAA6Ca,CAAC,EAA9C,CACEhB,GAAG,CAACiB,IAAJ,CAAS,CAAT,EAEF,IAAKD,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGhB,GAAG,CAACa,MAApB,CAA4BG,CAAC,EAA7B,CACEhB,GAAG,CAACgB,CAAD,CAAH,EAAU,IAAV,CACF,KAAKX,KAAL,CAAa,GAAI,MAAKH,IAAT,GAAgBY,MAAhB,CAAuBd,GAAvB,CAAb,CAEA;AACA,IAAKgB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGhB,GAAG,CAACa,MAApB,CAA4BG,CAAC,EAA7B,CACEhB,GAAG,CAACgB,CAAD,CAAH,EAAU,IAAV,CACF,KAAKV,KAAL,CAAa,GAAI,MAAKJ,IAAT,GAAgBY,MAAhB,CAAuBd,GAAvB,CAAb,CACD,CAlBD,CAoBAF,IAAI,CAACa,SAAL,CAAeG,MAAf,CAAwB,QAASA,OAAT,CAAgBI,GAAhB,CAAqBjB,GAArB,CAA0B,CAChD,KAAKI,KAAL,CAAWS,MAAX,CAAkBI,GAAlB,CAAuBjB,GAAvB,EACA,MAAO,KAAP,CACD,CAHD,CAKAH,IAAI,CAACa,SAAL,CAAeI,MAAf,CAAwB,QAASA,OAAT,CAAgBd,GAAhB,CAAqB,CAC3C,KAAKK,KAAL,CAAWQ,MAAX,CAAkB,KAAKT,KAAL,CAAWU,MAAX,EAAlB,EACA,MAAO,MAAKT,KAAL,CAAWS,MAAX,CAAkBd,GAAlB,CAAP,CACD,CAHD"},"metadata":{},"sourceType":"script"}