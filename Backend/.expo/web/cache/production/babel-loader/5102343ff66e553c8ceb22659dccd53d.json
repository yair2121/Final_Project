{"ast":null,"code":"'use strict';var TYPED_OK=typeof Uint8Array!=='undefined'&&typeof Uint16Array!=='undefined'&&typeof Int32Array!=='undefined';function _has(obj,key){return Object.prototype.hasOwnProperty.call(obj,key);}exports.assign=function(obj/*from1, from2, from3, ...*/){var sources=Array.prototype.slice.call(arguments,1);while(sources.length){var source=sources.shift();if(!source){continue;}if(typeof source!=='object'){throw new TypeError(source+'must be non-object');}for(var p in source){if(_has(source,p)){obj[p]=source[p];}}}return obj;};// reduce buffer size, avoiding mem copy\nexports.shrinkBuf=function(buf,size){if(buf.length===size){return buf;}if(buf.subarray){return buf.subarray(0,size);}buf.length=size;return buf;};var fnTyped={arraySet:function(dest,src,src_offs,len,dest_offs){if(src.subarray&&dest.subarray){dest.set(src.subarray(src_offs,src_offs+len),dest_offs);return;}// Fallback to ordinary array\nfor(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\nflattenChunks:function(chunks){var i,l,len,pos,chunk,result;// calculate data length\nlen=0;for(i=0,l=chunks.length;i<l;i++){len+=chunks[i].length;}// join chunks\nresult=new Uint8Array(len);pos=0;for(i=0,l=chunks.length;i<l;i++){chunk=chunks[i];result.set(chunk,pos);pos+=chunk.length;}return result;}};var fnUntyped={arraySet:function(dest,src,src_offs,len,dest_offs){for(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\nflattenChunks:function(chunks){return[].concat.apply([],chunks);}};// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped=function(on){if(on){exports.Buf8=Uint8Array;exports.Buf16=Uint16Array;exports.Buf32=Int32Array;exports.assign(exports,fnTyped);}else{exports.Buf8=Array;exports.Buf16=Array;exports.Buf32=Array;exports.assign(exports,fnUntyped);}};exports.setTyped(TYPED_OK);","map":{"version":3,"names":["TYPED_OK","Uint8Array","Uint16Array","Int32Array","_has","obj","key","Object","prototype","hasOwnProperty","call","exports","assign","sources","Array","slice","arguments","length","source","shift","TypeError","p","shrinkBuf","buf","size","subarray","fnTyped","arraySet","dest","src","src_offs","len","dest_offs","set","i","flattenChunks","chunks","l","pos","chunk","result","fnUntyped","concat","apply","setTyped","on","Buf8","Buf16","Buf32"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/pako/lib/utils/common.js"],"sourcesContent":["'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}