{"ast":null,"code":"'use strict';var utils=require('./utils');var assert=require('minimalistic-assert');function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian='big';this._delta8=this.blockSize/8;this._delta32=this.blockSize/32;}exports.BlockHash=BlockHash;BlockHash.prototype.update=function update(msg,enc){// Convert message to array, pad it, and join into 32bit blocks\nmsg=utils.toArray(msg,enc);if(!this.pending)this.pending=msg;else this.pending=this.pending.concat(msg);this.pendingTotal+=msg.length;// Enough data, try updating\nif(this.pending.length>=this._delta8){msg=this.pending;// Process pending data in blocks\nvar r=msg.length%this._delta8;this.pending=msg.slice(msg.length-r,msg.length);if(this.pending.length===0)this.pending=null;msg=utils.join32(msg,0,msg.length-r,this.endian);for(var i=0;i<msg.length;i+=this._delta32)this._update(msg,i,i+this._delta32);}return this;};BlockHash.prototype.digest=function digest(enc){this.update(this._pad());assert(this.pending===null);return this._digest(enc);};BlockHash.prototype._pad=function pad(){var len=this.pendingTotal;var bytes=this._delta8;var k=bytes-(len+this.padLength)%bytes;var res=new Array(k+this.padLength);res[0]=0x80;for(var i=1;i<k;i++)res[i]=0;// Append length\nlen<<=3;if(this.endian==='big'){for(var t=8;t<this.padLength;t++)res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=len>>>24&0xff;res[i++]=len>>>16&0xff;res[i++]=len>>>8&0xff;res[i++]=len&0xff;}else{res[i++]=len&0xff;res[i++]=len>>>8&0xff;res[i++]=len>>>16&0xff;res[i++]=len>>>24&0xff;res[i++]=0;res[i++]=0;res[i++]=0;res[i++]=0;for(t=8;t<this.padLength;t++)res[i++]=0;}return res;};","map":{"version":3,"names":["utils","require","assert","BlockHash","pending","pendingTotal","blockSize","constructor","outSize","hmacStrength","padLength","endian","_delta8","_delta32","exports","prototype","update","msg","enc","toArray","concat","length","r","slice","join32","i","_update","digest","_pad","_digest","pad","len","bytes","k","res","Array","t"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/hash.js/lib/hash/common.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}