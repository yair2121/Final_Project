{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';/*<replacement>*/var Buffer=require('safe-buffer').Buffer;/*</replacement>*/var isEncoding=Buffer.isEncoding||function(encoding){encoding=''+encoding;switch(encoding&&encoding.toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':return true;default:return false;}};function _normalizeEncoding(enc){if(!enc)return'utf8';var retried;while(true){switch(enc){case'utf8':case'utf-8':return'utf8';case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return'utf16le';case'latin1':case'binary':return'latin1';case'base64':case'ascii':case'hex':return enc;default:if(retried)return;// undefined\nenc=(''+enc).toLowerCase();retried=true;}}};// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc){var nenc=_normalizeEncoding(enc);if(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);return nenc||enc;}// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder=StringDecoder;function StringDecoder(encoding){this.encoding=normalizeEncoding(encoding);var nb;switch(this.encoding){case'utf16le':this.text=utf16Text;this.end=utf16End;nb=4;break;case'utf8':this.fillLast=utf8FillLast;nb=4;break;case'base64':this.text=base64Text;this.end=base64End;nb=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return;}this.lastNeed=0;this.lastTotal=0;this.lastChar=Buffer.allocUnsafe(nb);}StringDecoder.prototype.write=function(buf){if(buf.length===0)return'';var r;var i;if(this.lastNeed){r=this.fillLast(buf);if(r===undefined)return'';i=this.lastNeed;this.lastNeed=0;}else{i=0;}if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);return r||'';};StringDecoder.prototype.end=utf8End;// Returns only complete characters in a Buffer\nStringDecoder.prototype.text=utf8Text;// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length){buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length;};// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte){if(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;return byte>>6===0x02?-1:-2;}// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self,buf,i){var j=buf.length-1;if(j<i)return 0;var nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-1;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0)self.lastNeed=nb-2;return nb;}if(--j<i||nb===-2)return 0;nb=utf8CheckByte(buf[j]);if(nb>=0){if(nb>0){if(nb===2)nb=0;else self.lastNeed=nb-3;}return nb;}return 0;}// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self,buf,p){if((buf[0]&0xC0)!==0x80){self.lastNeed=0;return'\\ufffd';}if(self.lastNeed>1&&buf.length>1){if((buf[1]&0xC0)!==0x80){self.lastNeed=1;return'\\ufffd';}if(self.lastNeed>2&&buf.length>2){if((buf[2]&0xC0)!==0x80){self.lastNeed=2;return'\\ufffd';}}}}// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf){var p=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,buf,p);if(r!==undefined)return r;if(this.lastNeed<=buf.length){buf.copy(this.lastChar,p,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal);}buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length;}// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf,i){var total=utf8CheckIncomplete(this,buf,i);if(!this.lastNeed)return buf.toString('utf8',i);this.lastTotal=total;var end=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,0,end);return buf.toString('utf8',i,end);}// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+'\\ufffd';return r;}// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf,i){if((buf.length-i)%2===0){var r=buf.toString('utf16le',i);if(r){var c=r.charCodeAt(r.length-1);if(c>=0xD800&&c<=0xDBFF){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];return r.slice(0,-1);}}return r;}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString('utf16le',i,buf.length-1);}// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed){var end=this.lastTotal-this.lastNeed;return r+this.lastChar.toString('utf16le',0,end);}return r;}function base64Text(buf,i){var n=(buf.length-i)%3;if(n===0)return buf.toString('base64',i);this.lastNeed=3-n;this.lastTotal=3;if(n===1){this.lastChar[0]=buf[buf.length-1];}else{this.lastChar[0]=buf[buf.length-2];this.lastChar[1]=buf[buf.length-1];}return buf.toString('base64',i,buf.length-n);}function base64End(buf){var r=buf&&buf.length?this.write(buf):'';if(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);return r;}// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf){return buf.toString(this.encoding);}function simpleEnd(buf){return buf&&buf.length?this.write(buf):'';}","map":{"version":3,"names":["Buffer","require","isEncoding","encoding","toLowerCase","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","Error","exports","StringDecoder","nb","text","utf16Text","end","utf16End","fillLast","utf8FillLast","base64Text","base64End","write","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","prototype","buf","length","r","i","undefined","utf8End","utf8Text","copy","toString","utf8CheckByte","byte","utf8CheckIncomplete","self","j","utf8CheckExtraBytes","p","total","c","charCodeAt","slice","n"],"sources":["/usr/local/lib/node_modules/expo-cli/node_modules/string_decoder/lib/string_decoder.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}